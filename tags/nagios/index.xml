<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nagios on しゃちくWeb</title>
    <link>http://kyokoi1979.github.io/tags/nagios/</link>
    <description>Recent content in Nagios on しゃちくWeb</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <managingEditor>unyu1979@gmail.com (kyokoi)</managingEditor>
    <webMaster>unyu1979@gmail.com (kyokoi)</webMaster>
    <copyright>(C) 2016 kyokoi1979</copyright>
    <lastBuildDate>Tue, 17 Jan 2012 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://kyokoi1979.github.io/tags/nagios/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>NDOUtilsのインストール</title>
      <link>http://kyokoi1979.github.io/2012/01/17/ndoutils%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB/</link>
      <pubDate>Tue, 17 Jan 2012 00:00:00 +0000</pubDate>
      <author>unyu1979@gmail.com (kyokoi)</author>
      <guid>http://kyokoi1979.github.io/2012/01/17/ndoutils%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB/</guid>
      <description>

&lt;p&gt;NDOUtilsではNagiosのデータをデータベースに格納して管理することができます。
&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;詳細は公式サイトを参照してください。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://exchange.nagios.org/directory/Addons/Database-Backends/NDOUtils/details&#34;&gt;http://exchange.nagios.org/directory/Addons/Database-Backends/NDOUtils/details&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;下記はサイトからの引用です。&lt;/p&gt;

&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;NDOUtils allows you to export current and historical data from one or more Nagios instances to a MySQL database. Several community addons use this as one of their data sources. NDOUtils consists of a standalone daemon, a Nagios event broker, and several helper utilities.
&amp;lt;&amp;lt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;コンパイル-インストール&#34;&gt;コンパイル、インストール&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;$ curl http://jaist.dl.sourceforge.net/project/nagios/ndoutils-1.x/ndoutils-1.4b9/ndoutils-1.4b9.tar.gz | tar zxv
$ cd ndoutils-1.4b9
$ ./configure

*** Configuration summary for ndoutils 1.4b9 10-27-2009 ***:

 General Options:
 -------------------------
 NDO2DB user:    nagios
 NDO2DB group:   nagios


Review the options above for accuracy.  If they look okay,
type &#39;make&#39; to compile the NDO utilities.

$ make
$ sudo make install

  Hint: NDOUtils Installation against Nagios v3.x
  completed.

  If you want to install NDOUtils for Nagios v2.x
  please type  &#39;make install-2x


  Next step should be the database initialization/upgrade
  cd into the db/ directory and either:
     ./installdb  (for a new installation) or:
     ./upgradedb  (for an existing one)

make[1]: ディレクトリ `/usr/local/src/ndoutils-1.4b9/src&#39; から出ます

Main NDOUtils components installed

&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;データベース作成&#34;&gt;データベース作成&lt;/h1&gt;

&lt;p&gt;次にNDOUtilsで利用するデータベース、ユーザ、パスワードを設定します。(いずれもndoutilsとしました)
READMEには下記の記述があるため権限は制限しました。&lt;/p&gt;

&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Create a username/password that has at least the following privileges for the database:&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;    SELECT, INSERT, UPDATE, DELETE
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&amp;lt;&amp;lt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql&amp;gt; CREATE DATABASE ndoutils;
Query OK, 1 row affected (0.00 sec)

mysql&amp;gt; GRANT SELECT,INSERT,UPDATE,DELETE
    -&amp;gt; ON ndoutils.*
    -&amp;gt; TO ndoutils@localhost
    -&amp;gt; IDENTIFIED BY &#39;ndoutils&#39;;
Query OK, 0 rows affected (0.01 sec)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;次にテーブルを作成します。
failedと出ていますが気にしないでおきます :-)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd db
$ ./installdb -u root -p &amp;quot;&amp;quot; -h localhost -d ndoutils
DBD::mysql::db do failed: Table &#39;ndoutils.nagios_dbversion&#39; doesn&#39;t exist at ./installdb line 51.
** Creating tables for version 1.4b9
     Using mysql.sql for installation...
** Updating table nagios_dbversi
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;モジュール-コンフィグファイルのコピー&#34;&gt;モジュール、コンフィグファイルのコピー&lt;/h1&gt;

&lt;p&gt;broker moduleのコピー。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo cp src/ndomod-3x.o /usr/local/nagios/bin/ndomod.o
$ sudo cp config/ndomod.cfg-sample /usr/local/nagios/etc/ndomod.cfg
$ sudo chown nagios:nagios /usr/local/nagios/etc/ndomod.cfg
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;nagiosがbroker moduleを読み込むように設定。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudi vi /usr/local/nagios/etc/ndomod.cfg
broker_module=/usr/local/nagios/bin/ndomod.o config_file=/usr/local/nagios/etc/ndomod.cfg
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ndo2dbのコピー。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo cp src/ndo2db-3x /usr/local/nagios/bin/ndo2db
$ sudo cp config/ndo2db.cfg-sample /usr/local/nagios/etc/ndo2db.cfg
$ sudo chown nagios:nagios /usr/local/nagios/etc/ndo2db.cfg
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ndo2dbの設定を先ほど作成したデータベース情報に変更。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vi /usr/local/nagios/etc/ndo2db.cfg
db_name=ndoutils
db_user=ndoutils
db_pass=ndoutils
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ndo2dbデーモンの起動設定。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo cp daemon-init /etc/init.d/ndoutils
$ sudo chmod 755 /etc/init.d/ndoutils
$ sudo chkconfig ndoutils on
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;最後にndo2db,nagiosを起動して終わりです。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo service ndoutils start
$ sudo service nagios restart
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;動作確認&#34;&gt;動作確認&lt;/h1&gt;

&lt;p&gt;正常に動作していればnagiosのログ(/usr/local/nagios/var/nagios.log)に
こんな感じで表示されているはずです。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[1326691682] Nagios 3.3.1 starting... (PID=14465)
[1326691682] Local time is Mon Jan 16 14:28:02 JST 2012
[1326691682] LOG VERSION: 2.0
[1326691682] ndomod: NDOMOD 1.4b9 (10-27-2009) Copyright (c) 2009 Nagios Core Development Team and Community Contributors
[1326691682] ndomod: Successfully connected to data sink.  0 queued items to flush.
[1326691682] Event broker module &#39;/usr/local/nagios/bin/ndomod.o&#39; initialized successfully.
[1326691682] Finished daemonizing... (New PID=14469)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;また、MySQLにもデータが格納されます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql&amp;gt; SELECT * FROM ndoutils.nagios_hosts\G
*************************** 1. row ***************************
                          host_id: 2
                      instance_id: 1
                      config_type: 1
                   host_object_id: 1
                            alias: oreore.dtdns.net
                     display_name: oreore.dtdns.net
                          address: 127.0.0.1
          check_command_object_id: 13
               check_command_args:
   eventhandler_command_object_id: 0
        eventhandler_command_args:
notification_timeperiod_object_id: 43
       check_timeperiod_object_id: 2
       failure_prediction_options:
                   check_interval: 1
                   retry_interval: 1
               max_check_attempts: 10
         first_notification_delay: 0
            notification_interval: 120
                   notify_on_down: 1
            notify_on_unreachable: 1
               notify_on_recovery: 1
               notify_on_flapping: 0
               notify_on_downtime: 0
                      stalk_on_up: 0
                    stalk_on_down: 0
             stalk_on_unreachable: 0
           flap_detection_enabled: 1
             flap_detection_on_up: 1
           flap_detection_on_down: 1
    flap_detection_on_unreachable: 1
               low_flap_threshold: 0
              high_flap_threshold: 0
         process_performance_data: 1
         freshness_checks_enabled: 0
              freshness_threshold: 0
           passive_checks_enabled: 1
            event_handler_enabled: 1
            active_checks_enabled: 1
        retain_status_information: 1
     retain_nonstatus_information: 1
            notifications_enabled: 1
                 obsess_over_host: 1
       failure_prediction_enabled: 1
                            notes:
                        notes_url:
                       action_url:
                       icon_image:
                   icon_image_alt:
                       vrml_image:
                  statusmap_image:
                   have_2d_coords: 0
                             x_2d: -1
                             y_2d: 0
                   have_3d_coords: 0
                             x_3d: 0
                             y_3d: 0
                             z_3d: 0
1 row in set (0.00 sec)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>nginx &#43; Nagios のインストール(後編)</title>
      <link>http://kyokoi1979.github.io/2012/01/13/nginx--nagios-%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E5%BE%8C%E7%B7%A8/</link>
      <pubDate>Fri, 13 Jan 2012 00:00:00 +0000</pubDate>
      <author>unyu1979@gmail.com (kyokoi)</author>
      <guid>http://kyokoi1979.github.io/2012/01/13/nginx--nagios-%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E5%BE%8C%E7%B7%A8/</guid>
      <description>

&lt;p&gt;前編に続き、今回はNagiosのWebコンソール表示に必要な設定をしていきます。
&lt;!-- more --&gt;
configureスクリプトを実行した時に表示されていたように、/nagiosへのエイリアスを設定します。&lt;/p&gt;

&lt;p&gt;これです。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; Web Interface Options:
 ------------------------
                 HTML URL:  http://localhost/nagios/
                  CGI URL:  http://localhost/nagios/cgi-bin/
 Traceroute (used by WAP):  /bin/traceroute
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;nginxのコンフィグに下記の通り追記します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vi /etc/nginx/conf.d/default.conf

server {
....
....
....
  location /nagios {
    alias /usr/local/nagios/share;
    index index.php;
    auth_basic            &amp;quot;Nagios Access&amp;quot;;
    auth_basic_user_file  /usr/local/nagios/etc/htpasswd.users;
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;basic認証設定:2f9e8ea6f33a5739af3c2651d2707a40&#34;&gt;Basic認証設定&lt;/h1&gt;

&lt;p&gt;Basic認証のパスワードファイルを作成します。
なお、ここで設定したユーザIDについてはWebコンソールでのアクセス制御に用います。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# sudo htpasswd -c /usr/local/nagios/etc/htpasswd.users nagiosadmin
New password:
Re-type new password:
Adding password for user nagiosadmin
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ちなみに、ディストリビューションのバージョンによってはデフォルトでCryptを使った暗号化がされるので気をつけてください。
長いパスワードを設定しても9文字目からは効果がありません。
※Fedora16ではMD5がデフォルトになっているので問題ありません&lt;/p&gt;

&lt;h1 id=&#34;php関連の設定:2f9e8ea6f33a5739af3c2651d2707a40&#34;&gt;PHP関連の設定&lt;/h1&gt;

&lt;p&gt;nginxはデフォルトのままではPHPを処理してくれないので、php-fpmを使って設定してみます。
user, groupがapacheになっているのでnginxへと書き換えます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vi /etc/php-fpm.d/www.conf

user = nginx
; RPM: Keep a group allowed to write in log dir.
group = nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;次にnginxの設定も変更します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vi /etc/nginx/conf.d/default.conf

  location ~ ^/nagios/(.*\.php)$ {
    alias /usr/local/nagios/share/$1;
    include /etc/nginx/fastcgi.conf;
    fastcgi_pass 127.0.0.1:9000;
    auth_basic            &amp;quot;Nagios Access&amp;quot;;
    auth_basic_user_file  /usr/local/nagios/etc/htpasswd.users;
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;後はphp-fpmの起動、nginxの再起動を実施します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo systemctl start php-fpm.service
$ sudo systemctl restart nginx.service
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ブラウザでアクセスするとWebコンソールが表示されるようになります。

&lt;figure &gt;
    
        &lt;img src=&#34;http://kyokoi1979.github.io/images/20120113120818.jpg&#34; /&gt;
    
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;h1 id=&#34;cgi関連の設定:2f9e8ea6f33a5739af3c2651d2707a40&#34;&gt;CGI関連の設定&lt;/h1&gt;

&lt;p&gt;CGIの実行にはspawn-fcgiとfcgiwrapを用います。&lt;/p&gt;

&lt;p&gt;まずはfcgiwrapをインストールします。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git clone git://github.com/gnosek/fcgiwrap.git
$ cd fcgiwrap
$ autoreconf -i
$ ./configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; sudo make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;続いてspawn-fcgiの設定をします。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vi /etc/sysconfig/spawn-fcgi

FCGI_SOCKET=/var/run/fcgiwrap.socket
FCGI_PROGRAM=/usr/local/sbin/fcgiwrap
FCGI_USER=nginx
FCGI_GROUP=nginx
FCGI_EXTRA_OPTIONS=&amp;quot;-M 0700&amp;quot;
OPTIONS=&amp;quot;-u $FCGI_USER -g $FCGI_GROUP -s $FCGI_SOCKET -S $FCGI_EXTRA_OPTIONS -F 1 -P /var/run/spawn-fcgi.pid -- $FCGI_PROGRAM&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;spawn-fcgiを起動して&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo systemctl start spawn-fcgi.service
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;nginxに設定を追加して&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vi /etc/nginx/conf.d/default.conf

  location ~ ^/nagios/(.*\.cgi)$ {
    root /usr/local/nagios/sbin/;
    rewrite ^/nagios/cgi-bin/(.*)\.cgi /$1.cgi break;
    fastcgi_param AUTH_USER $remote_user;
    fastcgi_param REMOTE_USER $remote_user;
    include /etc/nginx/fastcgi.conf;
    fastcgi_pass  unix:/var/run/fcgiwrap.socket;
    auth_basic            &amp;quot;Nagios Access&amp;quot;;
    auth_basic_user_file  /usr/local/nagios/etc/htpasswd.users;
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;nginxを再起動して終わり。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo systemctl restart nginx.service
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これでひと通りの設定が終わりました。&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://kyokoi1979.github.io/images/20120113124050.jpg&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;ul&gt;
&lt;li&gt;自動起動設定&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;最後にnginx, php-fpm, spawn-fcgiの自動起動設定をします。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo systemctl enable nginx.service php-fpm.service spawn-fcgi.service
$ sudo chkconfig nagios on
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;nagiosのみchkconfigを用いていますが、他もchkconfigで問題ありません。
native serviceではないということで結局はchkconfigが実行されます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;nginx.service is not a native service, redirecting to /sbin/chkconfig.
Executing /sbin/chkconfig nginx on
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これでnginx + Nagios を用いた監視サーバの構築ができました。
今後は監視で取得したデータのグラフ化やNagios設定のカスタマイズ、監視設定等について書いていこうと思います。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>nginx &#43; Nagios のインストール(前編)</title>
      <link>http://kyokoi1979.github.io/2011/11/25/nginx--nagios-%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E5%89%8D%E7%B7%A8/</link>
      <pubDate>Fri, 25 Nov 2011 00:00:00 +0000</pubDate>
      <author>unyu1979@gmail.com (kyokoi)</author>
      <guid>http://kyokoi1979.github.io/2011/11/25/nginx--nagios-%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E5%89%8D%E7%B7%A8/</guid>
      <description>

&lt;p&gt;Fedora16にnginxとNagiosを使った監視サーバを構築してみます。
&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;nginx固有の部分を覗いて基本的に
&lt;a href=&#34;http://nagios.sourceforge.net/docs/3_0/quickstart-fedora.html&#34;&gt;公式のマニュアル通り&lt;/a&gt;
です。&lt;/p&gt;

&lt;h1 id=&#34;パッケージのインストール&#34;&gt;パッケージのインストール&lt;/h1&gt;

&lt;p&gt;まずコンパイル、Web UI表示のために色々いれます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo yum install gcc glibc glibc-common gd gd-devel nginx php  fcgi-devel spawn-fcgi php-fpm
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;ユーザ-グループ作成&#34;&gt;ユーザ、グループ作成&lt;/h1&gt;

&lt;p&gt;Nagios用のユーザを作成します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo useradd -m nagios
$ sudo passwd nagios
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;次にグループを作成し、nagiosユーザとnginxユーザを所属させます。
これはWebインタフェースからのコマンド実行のため用います。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo useradd -m nagios
$ sudo groupadd nagios
$ sudo usermod -a -G nagios nagios
$ sudo usermod -a -G nagios nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;nagiosのコンパイル-インストール&#34;&gt;Nagiosのコンパイル・インストール&lt;/h1&gt;

&lt;p&gt;Nagiosの公式サイトからNagios Coreのソースファイルをダウンロード、展開します。
sedの箇所を実施しないとmake installの途中でエラーになりますので気をつけてください。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd /tmp
$ curl http://jaist.dl.sourceforge.net/project/nagios/nagios-3.x/nagios-3.3.1/nagios-3.3.1.tar.gz | tar zxv
$ cd nagios
$ ./configure
$ sed -i &#39;s:for file in includes/rss/\*;:for file in includes/rss/\*.\*;:g&#39; ./html/Makefile
$ sed -i &#39;s:for file in includes/rss/extlib/\*;:for file in includes/rss/extlib/\*.\*;:g&#39; ./html/Makefile
$ make all
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;なお、configureのオプションを指定しない場合こんな感じになります。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; General Options:
 -------------------------
        Nagios executable:  nagios
        Nagios user/group:  nagios,nagios
       Command user/group:  nagios,nagios
            Embedded Perl:  no
             Event Broker:  yes
        Install ${prefix}:  /usr/local/nagios
                Lock file:  ${prefix}/var/nagios.lock
   Check result directory:  ${prefix}/var/spool/checkresults
           Init directory:  /etc/rc.d/init.d
  Apache conf.d directory:  /etc/httpd/conf.d
             Mail program:  /bin/mail
                  Host OS:  linux-gnu

 Web Interface Options:
 ------------------------
                 HTML URL:  http://localhost/nagios/
                  CGI URL:  http://localhost/nagios/cgi-bin/
 Traceroute (used by WAP):  /bin/traceroute


Review the options above for accuracy.  If they look okay,
type &#39;make all&#39; to compile the main program and CGIs.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;次にインストールします。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo make install install-init install-commandmode
$ sudo make install-config
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ちなみにApacheの場合はfullinstallとするとApache向けのコンフィグもインストールしてくれます。
install-configについてはサンプルのコンフィグをインストールしてくれます。&lt;/p&gt;

&lt;p&gt;あとはお好みで自動起動設定でもすればOKです。&lt;/p&gt;

&lt;h1 id=&#34;nagios-pluginsのコンパイル-インストール&#34;&gt;nagios-pluginsのコンパイル・インストール&lt;/h1&gt;

&lt;p&gt;nagios pluginsはNagiosが監視をするためのコマンドたちです。
先ほどインストールしたコンフィグで監視するためにはnagios pluginsが必要になります。&lt;/p&gt;

&lt;p&gt;現時点での最新版は1.4.15ですが、しばらくリリースされていないのでGit版にします。
autoconf, automake, gitが必要になるのでインストールしておいてください。&lt;/p&gt;

&lt;p&gt;こちらは特に難しいことはなく、レポジトリをクローンしてconfigureスクリプトを作成、実行、make、make installして完了です。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd /tmp
$ git clone git://nagiosplug.git.sourceforge.net/gitroot/nagiosplug/nagiosplug
$ cd nagiosplug
$ ./tools/setup
$ ./configure
$ make &amp;amp;&amp;amp; sudo make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;なお、ライブラリ等の有無によって作成されるプラグインに違いが出てきますので詳しくはドキュメントを確認してください。
例えばMySQLの接続性を監視したい場合はmysql-develなどが必要になります。&lt;/p&gt;

&lt;h1 id=&#34;nagiosを起動する&#34;&gt;Nagiosを起動する&lt;/h1&gt;

&lt;p&gt;とりあえず監視するのに必要なものはインストールされたので、Nagiosを起動してみます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo service nagios start
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ただし、これだけでは何も見えません。
Webサーバの設定については次回書こうと思います。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>